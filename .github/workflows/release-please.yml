on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.ANKIMD_GITHUB_TOKEN }}
          command: manifest

      # Credits: https://github.com/remarkablemark/release-please-extra-files-demo/blob/master/.github/workflows/release-please.yml
      - uses: actions/checkout@v3
        if: steps.release.outputs.pr
        with:
          ref: ${{ fromJson(steps.release.outputs.pr).headBranchName }}
      - uses: actions/setup-node@v3
        if: steps.release.outputs.pr
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - name: Configure Git user
        if: steps.release.outputs.pr
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git --no-pager show --name-only
      - name: Run CHANGELOG.md through Prettier and commit
        if: steps.release.outputs.pr
        run: |
          npx prettier --write packages/*/CHANGELOG.md
          git add packages/*/CHANGELOG.md
          git commit -m 'chore: run CHANGELOG.md through Prettier.' --no-verify
      - name: Update cli/README
        working-directory: ./packages/cli
        if: steps.release.outputs.pr
        run: |
          npm i
          npm run prepack
          npx prettier --write README.md
          git add README.md
          git commit -m 'chore(cli): update README.' --no-verify || echo "no update"
      - name: push
        if: steps.release.outputs.pr
        # Use personal access token to trigger workflows.
        # See https://help.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
        run: git push https://${GITHUB_ACTOR}:${{ secrets.ANKIMD_GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}

      # The logic below handles the npm publication:
      - uses: actions/checkout@v3
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: steps.release.outputs.release_created
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
        if: steps.release.outputs.release_created
      - working-directory: ./packages/core
        if: steps.release.outputs['packages/core-a--release_created']
        run: |
          npm ci
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - working-directory: ./packages/cli
        if: steps.release.outputs['packages/cli-a--release_created']
        run: |
          npm i
          npm run prepack
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
